# -*- python -*-

import lsst.sconsUtils
import re
import os.path

dependencies = {}

class Configuration(lsst.sconsUtils.Configuration):

    def __init__(self):
        self.name, self.root = self.parseFilename(__file__)

    def configure(self, conf, packages, check=False, build=True):
        import distutils.sysconfig
        lsst.sconsUtils.log.info("Configuring package '%s'." % self.name)
        conf.env.AppendUnique(XCPPPATH=distutils.sysconfig.get_python_inc().split())
        libDir = distutils.sysconfig.get_config_var("LIBPL")
        conf.env.AppendUnique(LIBPATH=[libDir])
        pylibrary = distutils.sysconfig.get_config_var("LIBRARY")
        mat = re.search("(python.*)\.(a|so|dylib)$", pylibrary)
        if mat:
            conf.env.libs["python"].append(mat.group(1))
            lsst.sconsUtils.log.info("Adding '%s' to target 'python'." % mat.group(1))
        for w in (" ".join([distutils.sysconfig.get_config_var("MODLIBS"),
                            distutils.sysconfig.get_config_var("SHLIBS")])).split():
            mat = re.search(r"^-([Ll])(.*)", w)
            if mat:
                lL = mat.group(1)
                arg = mat.group(2)
                if lL == "l":
                    if not arg in conf.env.libs:
                        conf.env.libs["python"].append(arg)
                        lsst.sconsUtils.log.info("Adding '%s' to target 'python'." % arg)
                else:
                    if os.path.isdir(arg):
                        conf.env.AppendUnique(LIBPATH=[arg])
                        lsst.sconsUtils.log.info("Adding '%s' to link path." % arg)
        if conf.env['PLATFORM'] == 'darwin':
            frameworkDir = libDir           # search up the libDir tree for the proper home for frameworks
            while frameworkDir and not re.match("^//*$", frameworkDir):
                frameworkDir, d2 = os.path.split(frameworkDir)
                if d2 == "Python.framework":
                    if not "Python" in os.listdir(os.path.join(frameworkDir, d2)):
                        lsst.sconUtils.log.warn(
                            "Expected to find Python in framework directory %s, but it isn't there"
                            % frameworkDir
                            )
                        return False
                    break
            opt = "-F%s" % frameworkDir
            if opt not in conf.env["LDMODULEFLAGS"]:
                conf.env.Append(LDMODULEFLAGS = [opt,])
        return True

config = Configuration()
